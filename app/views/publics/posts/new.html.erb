<div class="container">
  <div class="row text-center mb-4">
    <div class="col-3 offset-1">
      <h2 class="bg-info text-white d-block text-center">
        <strong>新規投稿</strong>
      </h2>
    </div>
  </div>
  <div class="row mt-5 p-4" style="background-color: lightblue;">
    <div class="col-5 text-center">
      <input id="address" type="textbox" class="rounded" autofocus="true">
      <input type="button" class="rounded" value="検索" onclick="codeAddress()">
      <div id='map' class="mt-3"></div>
    </div>
    <div class="col-7 mt-5">
      <%= form_with model: @post do |f| %>
        <div class="form-group row mx-auto">
          <%= f.label :latitude,"緯度", class: "col-3 offset-1" %>
          <%= f.text_field :latitude, id: :lat, class: "col-5" %>
        </div>
        <div class="form-group row mx-auto">
          <%= f.label :longitude,"経度", class: "col-3 offset-1" %>
          <%= f.text_field :longitude, id: :lng, class: "col-5" %>
        </div>
        <div class="form-group row mx-auto">
          <%= f.label :name, "施設名", class: "col-3 offset-1" %>
          <%= f.text_field :name, placeholder: "(例:セブンイレブン○○店)", class: "col-5" %>
        </div>
        <div class="form-group row mx-auto">
          <%= f.label :address, "住所", class: "col-3 offset-1" %>
          <%= f.text_field :address, id: :adr, class: "col-5" %>
        </div>
        <div class="form-group row mx-auto">
          <%= f.label :recommend, "おすすめ度", class: "col-3 offset-1" %>
          <div id="star" class: "col-5"></div>
        </div>
        <div class="form-group row mx-auto">
          <%= f.label :genre_id, "ジャンル", class: "col-3 offset-1" %>
          <%= f.select :genre_id, options_from_collection_for_select(@genre, :id, :name), class: "col-5" %>
        </div>
        <div class="form-group row mx-auto">
          <%= f.label :clean, "清潔度", class: "col-3 offset-1" %>
          <div id="star-clean" class: "col-5"></div>
        </div>
        <!--タグのチェックボックス-->
        <div class="check_box row mx-auto mb-3">
          <%= f.label :tag_ids, "駐車場タグ", class: "col-3 offset-1" %>
          <%= f.collection_check_boxes(:tag_ids, Tag.all, :id, :name) do |tag| %>
          <div>
            <%= tag.label do %>
              <%= tag.check_box %>
              <%= tag.text %>
            <% end %>
          </div>
          <% end %>
        </div>
        <!--ここまで-->
        <div class="form-group row mx-auto">
          <%= f.label :detail, "詳細説明", class: "col-3 offset-1" %>
          <%= f.text_area :detail, placeholder: "(例:ウォシュレットあり)", class: "col-5" %>
        </div>
        <div class="form-group row mx-auto">
          <%= f.label :status, "投稿ステータス", class: "col-3 offset-1" %>
          <div class="textalign-center col-5">
            <%= f.radio_button :status, true %>
            <%= f.label :status, "公開" %>
            <%= f.radio_button :status, false %>
            <%= f.label :status, "非公開" %>
          </div>
        </div>
        <div class="row">
          <div class="col-5 offset-3">
            <%= f.submit "投稿", class:"btn btn-success btn-block" %>
          </div>
        </div>
      <% end %>
    </div>
  </div>
</div>


<style>
#map {
  height: 550px;
  width: 100%;
}
</style>

<script>
let map

function initMap(){
  geocoder = new google.maps.Geocoder()

  map = new google.maps.Map(document.getElementById('map'), {
    center: {lat: 35.6896067, lng: 139.7005713},
    zoom: 16,
  });
  // 初期マップで中央にピンを指さないためコメントアウト
  // marker = new google.maps.Marker({
  //   position:  {lat: 35.6896067, lng: 139.7005713},
  //   map: map
  // });
}

//検索後のマップ作成
let geocoder
let aft
function codeAddress(){
  let inputAddress = document.getElementById('address').value;
  geocoder.geocode( { 'address': inputAddress}, function(results, status) {
    if (status == 'OK') {
        //マーカーが複数できないようにする
        if (aft == true){
            marker.setMap(null);
        }

        //新しくマーカーを作成する
        map.setCenter(results[0].geometry.location);
            marker = new google.maps.Marker({
            map: map,
            position: results[0].geometry.location,
            draggable: true // ドラッグ可能にする
        });

        //二度目以降か判断
        aft = true

        //検索した時に緯度経度を入力する
        console.log(results[0].geometry.location)
        document.getElementById('lat').value = results[0].geometry.location.lat();
        document.getElementById('lng').value = results[0].geometry.location.lng();
        //document.getElementById('adr').value = results[0].formatted_address.replace(/^日本、.* /, '')
         var ar =  results[0].formatted_address.split(' ');
        document.getElementById('adr').value = ar[1]
        // マーカーのドロップ（ドラッグ終了）時のイベント
        google.maps.event.addListener( marker, 'dragend', function(ev){
            // イベントの引数evの、プロパティ.latLngが緯度経度
            document.getElementById('lat').value = ev.latLng.lat();
            document.getElementById('lng').value = ev.latLng.lng();
            latLngtoaddress(ev.latLng)

        });
    } else {
      alert('該当する結果がありませんでした：' + status);
    }
  });
}

function latLngtoaddress(latLng){
  geocoder.geocode({
    latLng: latLng
  }, function(results, status) {
    if (status == google.maps.GeocoderStatus.OK) {
      // results.length > 1 で返ってくる場合もありますが・・・。
      if (results[0].geometry) {

          // 住所を取得(日本の場合だけ「日本, 」を削除)
          var address = results[0].formatted_address.replace(/^日本、.* /, '');
          var ar =  results[0].formatted_address.split(' ');
          console.log(ar);
          document.getElementById('adr').value =ar[1];
        }
      }
    else if (status == google.maps.GeocoderStatus.ERROR) {
      alert("サーバとの通信時に何らかのエラーが発生！");
    } else if (status == google.maps.GeocoderStatus.INVALID_REQUEST) {
      alert("リクエストに問題アリ！geocode()に渡すGeocoderRequestを確認せよ！！");
    } else if (status == google.maps.GeocoderStatus.OVER_QUERY_LIMIT) {
      alert("短時間にクエリを送りすぎ！落ち着いて！！");
    } else if (status == google.maps.GeocoderStatus.REQUEST_DENIED) {
      alert("このページではジオコーダの利用が許可されていない！・・・なぜ！？");
    } else if (status == google.maps.GeocoderStatus.UNKNOWN_ERROR) {
      alert("サーバ側でなんらかのトラブルが発生した模様。再挑戦されたし。");
    } else if (status == google.maps.GeocoderStatus.ZERO_RESULTS) {
      alert("見つかりません");
    } else {
      alert("えぇ～っと・・、バージョンアップ？");
    }
  });
}

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["API_KEY"] %>&callback=initMap" async defer></script>

<script>
  $('#star').raty({
      starOn: "<%= asset_path('star-on.png') %>",
      starOff: "<%= asset_path('star-off.png') %>",
      scoreName: 'post[recommend]'
    });
      $('#star-clean').raty({
      starOn: "<%= asset_path('star-on.png') %>",
      starOff: "<%= asset_path('star-off.png') %>",
      scoreName: 'post[clean]'
    });
</script>